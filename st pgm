prgm 1:



import java.util.Scanner;
public class checkpoint {
	public static void main(String[] args) {
// TODO Auto-generated method stub 
		Scanner sc=new Scanner(System.in);
		Check obj=new Check();
		int r, pass = 5555, k = 0, balance = 5000;
		int inp;
		while (k < 3) {
			System.out.println("Enter PIN number");
			inp = sc.nextInt();
			r = obj.checkPin(pass, inp);
			if (r == 1) {
				System.out.println("\nWelcome\n");
				break;
			}

			k++;

		}
		if (k == 3) {
			System.out.println("Ttransaction Terminated");
			System.exit(0);
		}
		r = 0;
		while (r == 0) {
			System.out.println("Enter the account type\n1-Savings\n2-Current\n");
			int type = sc.nextInt();
			r = obj.checkAccount(type);

		}
		int trans = 0;
		while (trans != 4) {

			System.out.println("Select transaction:\n\n1-Check Balance\n2-Withdraw\n3-Deposit\n4-Exit\n");
			trans = sc.nextInt();
			switch (trans) {
			case 1:
				obj.checkBal(balance);
				break;
			case 2:
				System.out.println("Enter the amount you want to withdraw");
				int amt = sc.nextInt();
				if (amt % 500 != 0) {
					System.out.println("Invalid amount");
				}

				else {
					r = obj.withdraw(amt, balance);
					balance = r;
				}
				;
				break;
			case 3:
				System.out.println("Enter the amount you want to deposit");
				int amt2 = sc.nextInt();

				int b = obj.deposit(amt2, balance);
				balance = b;
				break;
			}

		}
	}

}

class Check {
	int checkPin(int p, int i) {
		if (p == i)
			return 1;

		System.out.println("Invalid PIN number");
		return 0;
	}

	int checkAccount(int t) {
		if (t == 1) {
			System.out.println("Opened Savings account");
			return 1;
		} else if (t == 1) {

			System.out.println("Opened Current account");
			return 1;
		}

		else {
			System.out.println("Invalid Account Type");
			return 0;
		}
	}

	void checkBal(int bal) {

		System.out.println("Your available balance is=" + bal);

	}

	int withdraw(int a, int b) {
		if (a > b) {
			System.out.println("Insuffecient funds");
			return 0;
		}
		b = b - a;

		System.out.println("Successful transaction");
		checkBal(b);
		return b;

	}

	int deposit(int a, int b) {
		b = b + a;
		System.out.println("Successful transaction");
		checkBal(b);
		return b;

	}
}


******************************************************************************************************************

prgm 2:

java file:

import java.util.Scanner;
public class Pgm2 {
public String check(int a,int b,int c){
if((a>=1 && a<=200) && (b>=1 && b<=200) && (c>=1 && c<=200))
{
if((a+b>c)&&(b+c>a)&&(c+a>b))
{
if(a==b && b==c)
{
return ("Equilateral");
}
else if(a==b||b==c||c==a){
return ("Isosceles");
}
else
return ("Scalene");
}
return ("Not a Triangle");
}
return ("Invalid Values");
}
public static void main(String[] args)
{
Scanner sc=new Scanner(System.in);
Pgm2 t= new Pgm2();
System.out.println("Enter 3 inputs 1NH18CS052");
int a=sc.nextInt();
int b=sc.nextInt();
int c=sc.nextInt();
System.out.println(t.check(a,b,c));
}
}



if they ask for junit:

steps to create :
right click on java file -> new -> others -> junit test case

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class TRIANGLETest {

	@Test
	public void test1() {
		TRIANGLE t = new TRIANGLE();
		assertEquals(t.check(2, 2, 1), "Isosceles");
	}

	@Test
	public void test2() {
		TRIANGLE t = new TRIANGLE();
		assertEquals(t.check(100, 100, 2), "Isosceles");
	}

	@Test
	public void test3() {
		TRIANGLE t = new TRIANGLE();
		assertEquals(t.check(2, 2, 2), "Equilateral");
	}

	@Test
	public void test4() {
		TRIANGLE t = new TRIANGLE();
		assertEquals(t.check(2, 3, 4), "Scalene");
	}

	@Test

	public void test5() {

		TRIANGLE t = new TRIANGLE();
		assertEquals(t.check(100, 100, 200), "Not a Triangle");
	}
}




right click on this file and run as juint & check for percentage of testcase passed.


***********************************************************************************************************************

Prgm 3:

pract.java file:

package pract;

                                   
public class pract {
	public String check(int d, int m, int y) {
		int td,tm,ty;
		td=d;
		tm=m;
		ty=y;
		
		if(d>31 || d<1)
		{
			return "Invalid day.";
			//System.exit(0);
		}
		else if(m<1 || m>12) {
			return "Invalid month.";
			//System.exit(0);
		}
		else if(y<1812 || y>2012) {
			return "Invalid year.";
			//System.exit(0);
		}
		else {
			if(m==12){
				if(d==31)
				{
					td=1;
					tm=1;
					ty=y+1;
				}
				else {
					td=d+1;
					
				}
			}
			else if(m==2) {
				if(d<28) {
					td=d+1;
					
				}
				else if(d==28) {
					if(y%100==0 && y%400!=0) {
						td=1;
						tm=3;
					
					}
					else if(y%400==0) {
						td=29;
						
					}
					else if(y%4==0) {
						td=29;
					
					}
					else {
						td=1;
						tm=3;
						
					}
				}
			}
			else if(m==1 || m==3 || m==5 || m==7 || m==8 || m==10) {
				if(d==31) {
					td=1;
					tm=m+1;
				
				}
				else {
					td=d+1;
					
				}
			}
			else if(m==4 || m==6 || m==9 || m==11) {
				if(d==30) {
					td=1;
					tm=m+1;
					
				}
				else {
					td=d+1;
					
				}
			}
		}
		return "Next date is: "+td+"-"+tm+"-"+ty;
	}

}


practTest.java file:


package pract;

import static org.junit.Assert.*;

import org.junit.Test;

public class practTest {

	@Test
	public void test1() {
		pract n=new pract();
		assertEquals(n.check(15,6,1812),"Next date is: 16-6-1812");
	}
	
	@Test
	public void test2() {
		pract n=new pract();
		assertEquals(n.check(15,6,1813),"Next date is: 16-6-1813");
	}
	
	@Test
	public void test3() {
		pract n=new pract();
		assertEquals(n.check(15,6,1912),"Next date is: 16-6-1912");
	}
	
	@Test
	public void test4() {
		pract n=new pract();
		assertEquals(n.check(15,6,2011),"Next date is: 16-6-2011");
	}
	
	@Test
	public void test5() {
		pract n=new pract();
		assertEquals(n.check(15,6,2012),"Next date is: 16-6-2012");
	}
	
	@Test
	public void test6() {
		pract n=new pract();
		assertEquals(n.check(15,1,1912),"Next date is: 16-1-1912");
	}
	
	@Test
	public void test7() {
		pract n=new pract();
		assertEquals(n.check(15,2,1912),"Next date is: 16-2-1912");
	}
	
	@Test
	public void test8() {
		pract n=new pract();
		assertEquals(n.check(15,11,1912),"Next date is: 16-11-1912");
	}
	
	@Test
	public void test9() {
		pract n=new pract();
		assertEquals(n.check(15,12,1912),"Next date is: 16-12-1912");
	}
	
	@Test
	public void test10() {
		pract n=new pract();
		assertEquals(n.check(1,6,1912),"Next date is: 2-6-1912");
	}
	
	@Test
	public void test11() {
		pract n=new pract();
		assertEquals(n.check(2,6,1912),"Next date is: 3-6-1912");
	}
	
	@Test
	public void test12() {
		pract n=new pract();
		assertEquals(n.check(29,6,1912),"Next date is: 30-6-1912");
	}
	
	@Test
	public void test13() {
		pract n=new pract();
		assertEquals(n.check(30,6,1912),"Next date is: 1-7-1912");
	}
	@Test
	public void test111() {
		pract n=new pract();
		assertEquals(n.check(-1,6,1812),"Invalid day.");
	}
	
	@Test
	public void test211() {
		pract n=new pract();
		assertEquals(n.check(15,-1,1812),"Invalid month.");
	}
	
	@Test
	public void test311() {
		pract n=new pract();
		assertEquals(n.check(15,6,1811),"Invalid year.");
	}
	
	
	@Test
	public void test511() {
		pract n=new pract();
		assertEquals(n.check(15,6,2013),"Invalid year.");
	}
}
 
************************************************************************************************************************************************


PRGM 4:


package pract;

public class nextdate {
	public static String next(int d, int m, int y, int cc) {
		if (d == cc) {
			d = 1;
			if (m == 12) {
				y++;
				m = 1;
			} 
			else {
				m++;
			}
		} 
		else {
			d++;
		}

		return (String.valueOf(d) + "/" + String.valueOf(m) + "/" + String.valueOf(y));
	}

	public String nextday(int d, int m, int y) {
		if (d >= 1 && d <= 31 && m >= 1 && m <= 12 && y >= 1812 && y <= 2012) {
			switch (m) {
			case 1:
			case 3:
				return (next(d, m, y, 31));
			case 5:
				return (next(d, m, y, 31));
			case 7:
				return (next(d, m, y, 31));
			case 8:
				return (next(d, m, y, 31));
			case 10:
				return (next(d, m, y, 31));
			case 12:
				return (next(d, m, y, 31));
			case 4:
				return (next(d, m, y, 30));
			case 6:
				return (next(d, m, y, 30));
			case 9:
				return (next(d, m, y, 30));
			case 11:
				return (next(d, m, y, 30));
			default:
				return (next(d, m, y, ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) ? 29 : 28));
			}
		}
		return "Invalid Values";
	}
}






junit:

package pract;

import static org.junit.Assert.*;
import org.junit.Test;

public class nextdateTest {
//weak and strong normal test case
	@Test
	public void test_1() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(15, 6, 1912), "16/6/1912");
	}

	@Test
	public void test_2() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(10, 6, 1912), "11/6/1912");
	}

	@Test
	public void test_3() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(10, 6, 1900), "11/6/1900");
	}

	@Test
	public void test_4() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(10, 5, 1912), "11/5/1912");
	}

	@Test
	public void test_5() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(20, 10, 2010), "21/10/2010");
	}

//weak robust test cases
	@Test
	public void test3() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(-1, 10, 1912), "Invalid Values");
	}

	@Test
	public void test31() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12, 7, 1912), "13/7/1912");
	}

	@Test

	public void test32() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12, 8, 1912), "13/8/1912");
	}

	@Test

	public void test33() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12, 4, 1912), "13/4/1912");

	}

	@Test

	public void test34() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12, 9, 1912), "13/9/1912");
	}

	@Test

	public void test35() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12,1,1912),"13/1/1912");
	}

	@Test
	

	public void test36() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12,2,1912),"13/2/1912");
	}

	@Test
	

	public void test37() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(12,3,1912),"13/3/1912");
		
	}

	@Test
	

	public void test30() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(10, 3, 1912), "11/3/1912");
	}

	@Test
	public void test4() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(15, 13, 1912), "Invalid Values");

	}

	@Test

	public void test5() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(1, 6, 2200), "Invalid Values");

	}

	@Test

	public void test6() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(32, 6, 1912), "Invalid Values");
	}

	@Test

	public void test7() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(15, 6, 1811), "Invalid Values");
	}

	@Test

	public void test8() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(15, 6, 2013), "Invalid Values");
	}

//strong robust test cases
	@Test
	public void test9() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(2, 1, 1912), "3/1/1912");
	}

	@Test

	public void test10() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(-1, 3, 1900), "Invalid Values");

	}

	@Test

	public void test11() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(15, 0, 1811), "Invalid Values");
	}

	@Test

	public void

			test12() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(33,12,1912),"Invalid Values");
	}

	@Test
	

	public void test13() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(15,-1,-1),"Invalid Values");
	}

	@Test
	

	public void test14() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(-1,6,-1),"Invalid Values");
	}

	@Test
	

	public void test15() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(-1,-1,-1),"Invalid Values");
	}

	@Test
	

	public void test16() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(31,12,2010),"1/1/2011");
	}

	@Test
	

	public void test17() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(30, 11, 2010), "1/12/2010");
	}

	@Test
	public void test18() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(3, 2, 2010), "4/2/2010");
	}

	@Test
	public void test19() {
		nextdate ob1 = new nextdate();

		assertEquals(ob1.nextday(28,2,2010),"1/3/2010");
	}

	@Test
	

	public void test20() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(20, 2, 2008), "21/2/2008");
	}

	@Test
	public void test21() {
		
	}

	@Test
	

	public void test22() {
		nextdate ob1 = new nextdate();
		assertEquals(ob1.nextday(28, 2, 1900), "1/3/1900");
	}
}

************************************************************************************************************************************
PRGM 8:

open project normally
right click on package -> build path -> configure -> add external jars -> selenium drivers -> run as java application



import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
public class Login {
public static void main(String[] args)
{
System.setProperty("webdriver.chrome.driver","C:\\Users\\LAPHP269\\Desktop\\st\\chromedriver.exe");
ChromeDriver driver = new ChromeDriver(); 
driver.get("C:\\Users\\LAPHP269\\Desktop\\login.html");
driver.manage().window().maximize();
driver.findElement(By.name("username")).sendKeys("mercury");
driver.findElement(By.name("password")).sendKeys("mercury");
driver.findElement(By.name("login")).click();
}
}

HTML:

<!DOCTYPE html>
<html>
<head>
<title>Login Page</title>
</head>
<body>
		<h1>Login Page</h1>
		<br>
		<label>UserName:</label>
		<input type="text" name="username" required>
		<br>
		<br>
		<label>Password :</label>
		<input type="password" name="password" required>
		<br>
		<a href="C:\Users\LAPHP269\Desktop\st"><Button type="submit" name="login">login</Button></a>
</body>
</html>



**************************************************************************************************************************************************************

PRGM 9: 



import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.WebElement;
public class Practice{
	public static void main(String args[]) {
		System.setProperty("webdriver.chrome.driver","C:\\Users\\LAPHP269\\Desktop\\st\\chromedriver.exe");
		ChromeDriver driver = new ChromeDriver();
		driver.get("C:\\Users\\LAPHP269\\Desktop\\login.html");
		List<WebElement> links = driver.findElements(By.xpath("//a"));
		int linkcount = links.size();
		System.out.println("Total no of links = " + linkcount);
		List<WebElement> allElements = driver.findElements(By.xpath("//*"));
		int allcount = allElements.size();
		System.out.println("Total no of all elements = " + allcount);
		List<WebElement> images = driver.findElements(By.xpath("//img"));
		int imagecount = images.size();
		System.out.println("Total no of images = " + imagecount);

	}
}


HTML

<!DOCTYPE html>
<html>
<head>
<title>Login Page</title>
</head>
<body>
		<h1>Login Page</h1>
		<br>
		<label>UserName:</label>
		<input type="text" name="username" required>
		<br>
		<br>
		<label>Password :</label>
		<input type="password" name="password" required>
		<br>
		<a href="C:\Users\LAPHP269\Desktop\st"><Button type="submit" name="login">login</Button></a>
</body>
</html>



**********************************************************************************************************************************

PRGM 10:

IMPLICIT

import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import java.sql.Driver;
import java.util.List;
public class Program10{
public static void main(String[] args) {
 System.setProperty("webdriver.chrome.driver","C:\\Users\\LAPHP269\\Desktop\\st\\chromedriver.exe");
 ChromeDriver driver = new ChromeDriver();
 driver.get("C:\\Users\\LAPHP269\\Desktop\\10.html");
 driver.manage().window().maximize();
 String str=driver.getTitle();
 if(str.equals("Login")) {
 System.out.println(true);
 System.out.println("Title="+str);
 }
 else {
 System.out.println(false);
 }
 String str1=driver.getCurrentUrl();
 System.out.println("Url of current webpage is '"+str1+"'");

if(str1.equals("file:///C:/Users/LAPHP269/Desktop/10.html"))
 System.out.println(true);
 else
 System.out.println(false);
 }
 }

HTML

<html>
<head>
<title>Login</title>
</head>
<body>
<h1>Hello</h1>
<a href="select.html">click here</a>
</body>
</html>

************************************************************************************************************************************
PRGM 11:


package seledriver;

import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
public class Program11 {
	public static void main(String[] args)throws InterruptedException
	{
		System.setProperty("webdriver.chrome.driver","C:\\Users\\LAPHP269\\Desktop\\st\\chromedriver.exe");
		ChromeDriver driver = new ChromeDriver();
		driver.get("C:\\Users\\LAPHP269\\Desktop\\pgm11.html");
		driver.manage().window().maximize();
	
		Select select = new Select(driver.findElement(By.id("colours")));
		System.out.println("options are");
		List<WebElement> options=select.getOptions();
		for(WebElement option:options)
		{
			System.out.println(option.getText());
		}
		if(select.isMultiple())
			
		{
			System.out.println("select pink by value");
			select.selectByValue("pink");
			Thread.sleep(1000);
			System.out.println("select orange by Index");
			select.selectByIndex(2);
			Thread.sleep(1000);
			System.out.println("select blue by Index");
			select.selectByVisibleText("blue");
			Thread.sleep(1000);
			List<WebElement> alloptions=select.getAllSelectedOptions();
			for(WebElement alloption:alloptions)
			{
				System.out.println(alloption.getText());
			}
			System.out.println("deselect pink by visibletext");
			select.selectByVisibleText("pink");
			Thread.sleep(1000);
			System.out.println("deselect orange by index");
			select.deselectByIndex(2);
			Thread.sleep(1000);
			System.out.println("selectedoptions are");
			List<WebElement> alldeselectoptions=select.getAllSelectedOptions();
			for(WebElement alldeselectoption:alldeselectoptions)
			{
				System.out.println(alldeselectoption.getText());
			}
			select.deselectAll();
			
		}
		driver.quit();
		
		
	}

}


HTML;

<html>
<head>
<title>Dropdownlist</title>
</head>
<body>
<select name="colours" id="colours" multiple>
	<option value="blue">blue</option>
	<option value="orange">orange</option>
	<option value="pink">pink</option>
</select>
<body>
</html>

******************************************************************************************************************************************

PRGM 12:

import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
//import org.testng.annotations.Test;
public class Prog12imp {
public static void main(String[] args) throws InterruptedException {
System.setProperty ("webdriver.chrome.driver","C:\\Users\\Jeevitha R\\Desktop\\Jar\\chromedriver.exe" );
ChromeDriver driver = new ChromeDriver();
driver.manage().timeouts().implicitlyWait(10,TimeUnit.MINUTES) ;
String eTitle = "Demo Guru99 Page";
String aTitle = "" ;
// launch Chrome and redirect it to the Base URL
driver.get("http://demo.guru99.com/test/guru99home/" );
//Maximizes the browser window
driver.manage().window().maximize() ;
//get the actual value of the title
aTitle = driver.getTitle();
//compare the actual title with the expected title
if (aTitle.equals(eTitle))
{
System.out.println( "Test Passed") ;
}
else {
System.out.println( "Test Failed" );
}
//close browser
driver.close();
}
}

HTML:

<html>
<head>
<title>Login</title>
</head>
<body>
<h1>Hello</h1>
<a href="select.html">click here</a>
</body>
</html>





EXPLICIT

import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
public class prog12 {
public static void main(String[] args) throws InterruptedException {
System.setProperty("webdriver.chrome.driver","C:\\Users\\Jeevitha R\\Desktop\\Jar\\chromedriver.exe" 
);
ChromeDriver driver = new ChromeDriver();
WebDriverWait wait=new WebDriverWait(driver, 10);
String eTitle = "Demo Guru99 Page";
String aTitle = "" ;
// launch Chrome and redirect it to the Base URL
driver.get("http://demo.guru99.com/test/guru99home/" );
//Maximizes the browser window
driver.manage().window().maximize() ;
//get the actual value of the title
aTitle = driver.getTitle();
//compare the actual title with the expected title
if (aTitle.contentEquals(eTitle))
{
System.out.println( "Test Passed") ;
}
else {
System.out.println( "Test Failed" );
}
//driver.close();
WebElement guru99=wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath( "//a")));
guru99.click();
}
}





